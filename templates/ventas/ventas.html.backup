{% extends "base.html" %}

{% block title %}Ventas{% endblock %}
{% block style %}
<style>
  </style>
  {% endblock %}

{% block content %}

<div class="container" x-data="main()">
    <p class="title is-1">Pasar Venta</p>

    <div class="field is-horizontal box">
      <input type="search" placeholder="Buscar en Romitex"  class="input" x-model="buscar" @keyup.enter="buscarCliente">
      <button type="button" @click="buscarCliente" class="button is-primary">Buscar</button>
      <button type="button" @click="nuevoCliente" class="button is-danger" :disabled="!verVtaTerminada">Nuevo</button>
    </div>

  <div class="buttons" v-if="buscar">
      <div v-for="cliente in clientes">
          <!-- [dni,nombre,direccion] -->
      <button class="button is-info" @mouseover="buscar=cliente.calle+' '+cliente.num" @click="buscaCuentaporDni(cliente.dni)">|cliente.nombre|</button>
      </div>
  </div>

  <form class="box" id="EditarForm">
    <input type="hidden" name="csrf_token" ref="token" value="{{ csrf_token() }}"/>
    <div class="columns is-desktop">
      <div class="column is-1">
        <input type="text" v-model="cliente.sex" placeholder="Sexo" size="1" class="input" ref="sex" @keyup.enter="$refs.dni.focus()" @blur="validarSex">
        <p v-show="!cliente.sex" class="help is-danger">Requerido</p>
      </div>
      <div class="column is-2">
        <input type="text" v-model="cliente.dni" placeholder="DNI" size="6" class="input" ref="dni" @keyup.enter="$refs.nombre.focus()">
        <p v-show="!cliente.dni" class="help is-danger">Requerido</p>
      </div>
      <div class="column is-5">
        <input type="text" v-model="cliente.nombre" placeholder="Nombre" size="60" class="input" ref="nombre" @keyup.enter="$refs.tel.focus()">
        <p v-show="!cliente.nombre" class="help is-danger">Requerido</p>
      </div>
      <div class="column is-2">
        <input type="text" v-model="cliente.tel" placeholder="Telefono" size="20" class="input" ref="tel" @keyup.enter="$refs.wapp.focus()">
      </div>
      <div class="column is-2">
        <input type="text" v-model="cliente.wapp" placeholder="WhatApp" size="20" class="input" ref="wapp" @keyup.enter="$refs.calle.focus()">
      </div>
    </div>
    <div class="columns">
      <div class="column is-4">
          <b-autocomplete
                ref="calle"
                @keyup.enter.native="$refs.num.focus()"
                v-model="cliente.calle"
                :data="callesFiltradasArray"
                placeholder="Calle"
                clearable
                keep-first
                @select="option => selected = option">
                <template #empty>No se encontraron resultados</template>
            </b-autocomplete>
          <p v-show="!cliente.calle" class="help is-danger">Requerido</p>
      </div>
      <div class="column is-1">
        <input type="text" v-model="cliente.num" placeholder="Num" size="10" class="input" ref="num" @keyup.enter="$refs.barrio.focus()" >
        <p v-show="!cliente.num" class="help is-danger">Requerido</p>
      </div>
      <div class="column is-4">
      <b-autocomplete
                ref="barrio"
                @keyup.enter.native="$refs.zona.focus()"
                v-model="cliente.barrio"
                :data="barriosFiltradasArray"
                placeholder="Barrio"
                clearable
                keep-first
                @select="option => selected = option">
                <template #empty>No se encontraron resultados</template>
            </b-autocomplete>
      <p v-show="!cliente.barrio" class="help is-danger">Requerido</p>
      </div>
      <div class="column is-3">
      <b-autocomplete
                ref="zona"
                @keyup.enter.native="$refs.acla.focus()"
                v-model="cliente.zona"
                :data="zonasFiltradasArray"
                placeholder="Zona"
                clearable
                keep-first
                @select="option => selected = option">
                <template #empty>No se encontraron resultados</template>
            </b-autocomplete>
      <p v-show="!cliente.zona" class="help is-danger">Requerido</p>
      </div>
    </div>
    <div class="columns">
      <div class="column is-3">
        <input type="text" v-model="cliente.acla" placeholder="Aclaracion" size="30" class="input" ref="acla" @keyup.enter="$refs.horario.focus()">
      </div>
      <div class="column is-3">
        <input type="text" v-model="cliente.horario" placeholder="Horario" size="30" class="input" ref="horario" @keyup.enter="$refs.mjecobr.focus()">
      </div>
      <div class="column is-3">
        <input type="text" v-model="cliente.mjecobr" placeholder="Mje Cobrador" size="30" class="input" ref="mjecobr" @keyup.enter="$refs.infoseven.focus()">
      </div>
      <div class="column is-3">
        <input type="text" v-model="cliente.infoseven" placeholder="InfoSeven" size="30" class="input" ref="infoseven" @keyup.enter="$refs.guardarcliente.focus()">
      </div>
    </div>
    <div class="columns">
      <div class="column is-5" >
        <button type="button" class="button is-danger" ref="guardarcliente" @click="validarCliente" @keyup.space="$refs.fecha.focus()">Guardar</button>
        <button type="button" class="button is-danger" v-show="cliente.incobrable">INC</button>
        <button type="button" class="button is-danger" v-show="cliente.gestion">GESTION</button>
        <button type="button" class="button is-danger" v-show="cliente.mudo">MUDO</button>
      </div>
    </div>
  </form>

  <!-- form pasar ventas -->
  <form class="box">
    <input type="hidden" name="csrf_token" ref="token" value="{{ csrf_token() }}"/>
    <div class="columns">
      <div class="column is-2">
        <input type="date" v-model="venta.fecha" size=12 class="input" ref="fecha" @keyup.enter="$refs.vdor.focus()">
        <p v-show="!venta.fecha" class="help is-danger">Requerido</p>
      </div>
      <div class="column is-1">
        <input type="text" v-model="venta.idvdor" size=5 class="input" ref="vdor" placeholder="Vdor" @keyup.enter="$refs.ant.focus()">
        <p v-show="!venta.idvdor" class="help is-danger">Requerido</p>
      </div>
      <div class="column is-1">
        <input type="text" v-model="venta.ant" size=5 class="input" ref="ant" placeholder="Ant" @keyup.enter="$refs.cuotas.focus()">
      </div>
      <div class="column is-1">
        <input type="text" v-model="venta.cc" size=5 class="input" ref="cuotas" placeholder="Cuotas" @keyup.enter="$refs.imp.focus()">
        <p v-show="!venta.cc" class="help is-danger">Requerido</p>
      </div>
      <div class="column is-1">
        <input type="text" v-model="venta.ic" size=5 class="input" ref="imp" placeholder="Importe" @keyup.enter="$refs.per.focus()">
        <p v-show="!venta.ic" class="help is-danger">Requerido</p>
      </div>
      <div class="column is-2">
        <b-autocomplete
                ref="per"
                @keyup.enter.native="$refs.primera.focus()"
                v-model="venta.p"
                :data="perFiltradasArray"
                placeholder="Periodicidad"
                clearable
                keep-first
                @select="option => selected = option">
                <template #empty>No se encontraron resultados</template>
            </b-autocomplete>
            <p v-show="!venta.p" class="help is-danger">Requerido</p>
      </div>
      <div class="column is-2">
        <input type="date" v-model="venta.primera" size=12 class="input" ref="primera" @keyup.enter="$refs.guardarventa.focus()" @blur="validaFecha(venta.primera)">
        <p v-show="!venta.primera" class="help is-danger">Requerido</p>
      </div>
      <div class="column is-1">
        <button class="button is-danger" type="button" ref="guardarventa" @click="validarVenta" @keyup.space="$refs.cnt.focus()">Guardar</button>
      </div>
      <div class="column is-2" v-show="venta.id">
        <span class="tag is-primary is-large" >|venta.id|</span>
      </div>
    </div>
  </form>

  <!-- form detalle de ventas -->
  <form class="box">
    <div class="columns">
      <input type="hidden" name="csrf_token" ref="token" value="{{ csrf_token() }}"/>
   <div class="column is-1">
    <input type="text" v-model="detallevta.cnt" size=5 class="input" ref="cnt" placeholder="cnt" @keyup.enter="$refs.art.focus()">
    <p v-show="!detallevta.cnt" class="help is-danger">Requerido</p>
   </div>
       <div class="column is-8">
        <b-autocomplete
        ref="art"
        @keyup.enter.native="$refs.cuota.focus()"
        @dblclick.native="getArticulos"
        v-model="detallevta.art"
        :data="artFiltradasArray"
        placeholder="articulo"
        clearable
        keep-first
        @select="option => selected = option">
        <template #empty>No se encontraron resultados</template>
    </b-autocomplete>
        <div class="columns">
              <div class="column is-6">
              <p v-show="!detallevta.art" class="help is-danger">Requerido</p>
              </div>
              <div class="column is-6">
                <p class="help is-info" v-show="!detallevta.art"><a href="/stock/articulos" target="_blank">Agregar Articulo</a></p>
              </div>
          </div>
    </div>

    <div class="column is-2">
      <input type="text" v-model="detallevta.ic" size=5 class="input" ref="cuota" placeholder="cuota" @keyup.enter="$refs.guardardetalle.focus()">
        <p v-show="!detallevta.ic" class="help is-danger">Requerido</p>
    </div>
    <div class="column is-1">
      <button class="button is-danger" type="button" ref="guardardetalle" @click="validarDetalleVta">Guardar</button>
    </div>
    </div>
  </form>
  <!-- tabla detalle de venta -->
  <form class="box">
    <div class="columns">
      <div class="column is-6">
        <table class="table" v-show="detvta.length">
          <thead>
            <tr>
              <th>op</th>
              <th>id</th>
              <th>cnt</th>
              <th>art</th>
              <th>cc</th>
              <th class="sumar numeric">ic</th>
            </tr>
          </thead>
          <tbody>
            <tr v-for="dv in detvta">
              <td><button type="button" class="button is-danger is-small" @click="borrarDetVta(dv['id'])">Borrar</button></td>
              <td>|dv['id']|</td>
              <td>|dv['cnt']|</td>
              <td>|dv['art']|</td>
              <td>|dv['cc']|</td>
              <td>|dv['ic']|</td>
            </tr>
          </tbody>
        </table>
      </div>
      <div class="column is-6">
        <div class="notification is-warning" v-show="sumic-venta.ic && sumic<=venta.ic">
          <p class="title is-4">Falta agregar los articulos comprados</p>
        </div>
        <div class="notification is-danger" v-show="sumic>venta.ic">
          <p class="title is-4">Error la suma de los item es mayor al total</p>
        </div>
        <div class="notification is-success" v-show="verVtaTerminada">
          <p class="title is-4">Venta Terminada</p>
        </div>
      </div>
    </div>
  </form>
</div>
{% endblock %}

{% block script %}
<script>
const app = new Vue({
    el:"#app",
    delimiters:['|','|'],
    data:{
      buscar:'',
      clientes:[],
      calles:[],
      barrios:[],
      zonas:[],
      cliente:{id:'',sex:'',dni:'',calle:'', barrio:'', zona:'',acla:'', tel:'',wapp:'',mjecobr:'',horario:'',infoseven:''},
      venta:{p:'', id:'', ant:''},
      detallevta:{art:''},
      selected: null,
      periodicidad:['mensual','quincenal','semanal'],

      articulos:[],
      detvta: [],
      sumic: 0,
      verVtaTerminada:false,

    },
    methods:{
      buscarCliente(){
            axios.get('/buscador/'+this.buscar)
            .then(res=>{
                this.clientes = res.data.clientes
                if(this.clientes.length==1) this.buscaCuentaporDni(this.clientes[0].dni)
            })
            .catch(error=>{
              bulmaToast.toast({message:error.request.response,type:"is-danger"})
              this.cliente.dni = this.buscar
              this.$refs.sex.focus()
            })
        },
        buscaCuentaporDni(dni){
                this.cliente = this.clientes.filter(row=>row.dni==dni)[0]
                this.buscar = '';
                this.clientes = [];
                this.$refs.sex.focus()

        },
      getCalles(){
        axios.get('/ventas/getcalles')
        .then(res=>{
          this.calles = res.data.calles
        })
      },
      getBarrios(){
        axios.get('/ventas/getbarrios')
        .then(res=>{
          this.barrios = res.data.barrios
        })
      },
      getZonas(){
        axios.get('/ventas/getzonas')
        .then(res=>{
          this.zonas = res.data.zonas
        })
      },
      getArticulos(){
        axios.get('/ventas/getarticulos')
        .then(res=>{
          this.articulos = res.data.result
          //console.log(this.articulos);
        })
      },
      nuevoCliente(){
        this.buscar=''
        this.cliente={id:'', sex:'',dni:'',calle:'', barrio:'', zona:'',acla:'', tel:'',wapp:'',mjecobr:'',horario:'',infoseven:''}
        this.$refs.buscar.focus()
        this.venta.id=''
        this.venta.ic=''
        this.venta.primera=''
        this.detvta=[]
        this.sumic=0
        this.verVtaTerminada=false
        this.detallevta={art:''}
      },
      validarCliente(){
        if(this.cliente.sex!=''&&this.cliente.dni!=''&&this.cliente.nombre!=''&&this.cliente.calle!=''&&this.cliente.num!=''&&this.cliente.barrio!=''&&this.cliente.zona!=''){
          this.guardarCliente()
        }else{
          bulmaToast.toast({message:"Complete los datos minimos requeridos", type:'is-danger'})
        }
      },
      guardarCliente(){

            axios.defaults.headers.common['X-CSRF-TOKEN'] = this.$refs.token.value
            axios({
                method:'POST',
                url:'/ventas/guardarcliente',
                data:this.cliente
                })
                .then(res=>{
                  bulmaToast.toast({message:"Cliente creado/editado con exito", type:'is-success'})
                  if (this.cliente.id=='') this.cliente.id=res.data.id
                })
                .catch(error=>{
                  bulmaToast.toast({message:error.request.response, type:'is-danger'})
                })
      },
      validarSex(){
        if(this.cliente.sex==''){
          bulmaToast.toast({message:"este campo es requerido", type:'is-danger'})
          this.$refs.sex.focus()
        }
        if(this.cliente.sex!='f'&&this.cliente.sex!='F'&&this.cliente.sex!='m'&&this.cliente.sex!='M'){
          bulmaToast.toast({message:"unicamente se aceptan F o M", type:'is-danger'})
          this.$refs.sex.focus()
        }
        this.cliente.sex = this.cliente.sex.toUpperCase()
      },
      validarVenta(){
        if(this.venta.fecha!=''&&this.venta.idvdor!=''&&this.venta.cc!=''&&this.venta.ic!=''&&this.venta.p!=''&&this.venta.primera!=''&&this.validaFecha(this.venta.primera)){
          this.guardarVenta()
        }else{
          bulmaToast.toast({message:"Complete los datos minimos requeridos", type:'is-danger'})
        }
      },
      guardarVenta(){
            this.venta.idcliente = this.cliente.id
            axios.defaults.headers.common['X-CSRF-TOKEN'] = this.$refs.token.value
            axios({
                method:'POST',
                url:'/ventas/guardarventa',
                data: this.venta
                })
                .then(res=>{
                  bulmaToast.toast({message:"Venta creada con exito", type:'is-success'})
                  this.venta.id=res.data.idvta
                })
                .catch(error=>{
                  bulmaToast.toast({message:error.request.response, type:'is-danger'})
                })
      },
      validarDetalleVta(){
        if(this.detallevta.cnt!=''&&this.detallevta.art!=''&&this.detallevta.ic!=''){
          this.guardarDetalleVta()
        }else{
          bulmaToast.toast({message:"Complete los datos minimos requeridos", type:'is-danger'})
        }
      },
      guardarDetalleVta(){
        this.detallevta.idvta = this.venta.id
        this.detallevta.cc = this.venta.cc
        this.detallevta.art = this.detallevta.art.substring(3)
        axios.defaults.headers.common['X-CSRF-TOKEN'] = this.$refs.token.value
            axios({
                method:'POST',
                url:'/ventas/guardardetvta',
                data: this.detallevta
                })
                .then(res=>{
                  bulmaToast.toast({message:"Detalle ingresado con exito", type:'is-success'})
                  this.detvta = res.data.detvta
                  this.sumic = res.data.sumic
                  if (this.sumic==Number(this.venta.ic)) this.verVtaTerminada=true;
                  if (this.sumic>Number(this.venta.ic)) this.verVtaTerminada=false;
                  this.detallevta = {art:''}
                  this.$refs.cnt.focus()
                })
                .catch(error=>{
                  bulmaToast.toast({message:error.request.response, type:'is-danger'})
                })
      },
      borrarDetVta(id){
        axios.get('/ventas/borrardetvta/'+id)
        .then(res=>{
          bulmaToast.toast({message:"item borrado con exito", type:'is-success'})
          this.detvta = res.data.detvta
          this.sumic = res.data.sumic
          if (this.sumic==Number(this.venta.ic)) this.verVtaTerminada=true;
          if (this.sumic>Number(this.venta.ic)) this.verVtaTerminada=false;
          if (this.sumic==0) this.verVtaTerminada=false;
        })
        .catch(error=>{
          bulmaToast.toast({message:error.request.response, type:'is-danger'})
        })
      },
      validaFecha(fecha){
          if(fecha<dayjs.utc(this.venta.fecha).format('YYYY-MM-DD')||fecha>dayjs.utc().add(3,'month').format('YYYY-MM-DD')){
            bulmaToast.toast({message:"Fecha invalida",type:"is-danger"})
            return false
          }else{
            return true
          }
        },
    },
    created: function(){
      this.getCalles()
      this.getBarrios()
      this.getZonas()
      this.getArticulos()
    },
    computed: {
        callesFiltradasArray() {
            return this.calles.filter((option) => {
                return option
                    .toString()
                    .toLowerCase()
                    .indexOf(this.cliente.calle.toLowerCase()) >= 0
            })
        },
        barriosFiltradasArray() {
            return this.barrios.filter((option) => {
                return option
                    .toString()
                    .toLowerCase()
                    .indexOf(this.cliente.barrio.toLowerCase()) >= 0
            })
        },
        zonasFiltradasArray() {
            return this.zonas.filter((option) => {
                return option
                    .toString()
                    .toLowerCase()
                    .indexOf(this.cliente.zona.toLowerCase()) >= 0
            })
        },
        perFiltradasArray() {
            return this.periodicidad.filter((option) => {
                return option
                    .toString()
                    .toLowerCase()
                    .indexOf(this.venta.p.toLowerCase()) >= 0
            })
        },
        artFiltradasArray() {
            return this.articulos.filter((option) => {
                return option
                    .toString()
                    .toLowerCase()
                    .indexOf(this.detallevta.art.toLowerCase()) >= 0
            })
        },

    },
  })
  </script>
  {% endblock %}
